---
title: "Das LiFi-Projekt {.unnumbered}"
author: "Prof. Dr. Nicolas Meseth"
format: pdf
toc: true
number-sections: false
code-line-numbers: true
subtitle: "Digitalisierung und Programmierung"
bibliography: bundle/references.bib
---
Anhand einer praktischen Problemstellung gestaltet uns das LiFi-Projekt die Einführung in die digitale Welt interessanter, greifbarer und praxisnäher. Als klassisches Ingenieursproblem kann es die grundlegenden Prinzipien der Digitalisierung besonders anschaulich verdeutlichen.

## Worum geht es im LiFi-Projekt?

Das LiFi-Projekt konzentriert sich auf die Verbindung zwischen analoger und digitaler Welt. Im Zentrum steht die Nutzung von Licht zur Datenübertragung: Digitale Informationen werden in Lichtsignale umgewandelt und beim Empfang wieder zurück in digitale Form konvertiert.

[LiFi](https://en.wikipedia.org/wiki/Li-Fi) (Light Fidelity) ist eine innovative Technologie zur optischen Datenübertragung. Sie verwendet das sichtbare Lichtspektrum und einen Fotodetektor, der LED-Signale erfasst. Durch präzise Steuerung der Lichteigenschaften - wie Wellenlänge und Helligkeit - werden Daten kodiert und übertragen. Diese Technologie eignet sich besonders für Umgebungen, in denen herkömmliche Funkwellen problematisch sind, etwa in der Nähe empfindlicher Elektronik oder bei Unterwasser-Anwendungen.

Die Kombination von Hardware und Software spielt dabei eine zentrale Rolle. Dies ermöglicht uns, die Grundlagen der computergestützten Informationsverarbeitung praktisch zu verstehen und erste Programmiererfahrungen in einem realen Anwendungskontext zu sammeln.

In diesem Projekt arbeitest du als Mitglied eines interdisziplinären F&E-Teams an der Entwicklung eines LiFi-Kommunikationsgeräts für Roboter im Agrar- und Lebensmittelsektor. Das System basiert auf drei Kernkomponenten: [eine RGB-LED](https://www.tinkerforge.com/en/doc/Hardware/Bricklets/RGB_LED_V2.html) mit über 16 Millionen Farbkombinationen als Sender, ein präziser [Farbsensor](https://www.tinkerforge.com/en/doc/Hardware/Bricklets/Color_V2.html) als Empfänger und ein [Master Brick](https://www.tinkerforge.com/en/doc/Hardware/Bricks/Master_Brick.html) als zentrale Steuerungseinheit für die Kommunikation zwischen Roboter und Peripheriegeräten.

## Was sind die Ziele?

Das LiFi-Projekt bietet eine praktische Einführung in ein klassisches Ingenieursproblem: die Integration von Hardware und Software zur Lösung realer Herausforderungen. Um die Projektziele systematisch zu erreichen, befassen wir uns mit folgenden Kernfragen:

### Grundlegende Konzepte

-   Wie erfolgt die Umwandlung physikalischer Größen (z.B. Licht, Temperatur) in digitale Daten?
-   Wie können Algorithmen diese digitalen Daten verarbeiten und nutzen?

### Technische Umsetzung

-   Wie funktioniert die Informationsübertragung mittels Lichtsignalen?
-   Wie lässt sich ein effektives Kommunikationssystem mit LED und Farbsensor realisieren?
-   Welches Übertragungsprotokoll eignet sich optimal für die LED-basierte Kommunikation?

### Leistungsmerkmale

-   Wie zuverlässig ist die Datenübertragung?
-   Welche maximale Übertragungsdistanz können wir erreichen?
-   Welche Umgebungsbedingungen sind erforderlich?
-   Wie kann die Übertragungssicherheit gewährleistet werden?
-   Welche Datenübertragungsrate ist möglich?
-   Wie lässt sich die Kommunikationseffizienz optimieren?

Dabei arbeiten wir ausschließlich mit der bereitgestellten Hardware - einer LED und einem Farbsensor - um diese Fragen zu beantworten.

Nach Abschluss des Projekts wirst du nicht nur praktische Lösungen für diese technischen Herausforderungen entwickelt haben, sondern auch ein fundiertes Verständnis der digitalen Welt und grundlegende Programmierfähigkeiten erworben haben.

## Wie gehen wir vor?

Ein solch großes und komplexes Ingenieursproblem wie das LiFi-Projekt erfordert ein durchdachtes Vorgehen. Da es sich vornehmlich um ein Projekt zur Einführung in die digitale Welt handelt, gehen wir schrittweise vor und lernen bei jedem Schritt wichtige Grundlagen, die uns bei der Umsetzung helfen.

Zuerst widmen wir uns dem Basteln: Nach Anleitung setzen wir aus den bereitgestellten Hardware-Bauteilen den LiFi-Prototypen zusammen. Dieser bildet die Grundlage für unsere praktische Arbeit im Projekt. Während die Hardware nur einmalig zu Beginn aufgebaut werden muss, entwickeln wir die Software kontinuierlich über das gesamte Projekt hinweg weiter.

Um das Problem besser zu verstehen und in kleinere Teilprobleme zu zerlegen, betrachten wir in @sec-problem-solving zunächst geeignete Techniken zur Problemlösung. Parallel dazu beginnen wir mit der Programmierung in Python – der Sprache, die wir für die Entwicklung der LiFi-Software nutzen werden. Diese Kenntnisse erweitern wir in jedem Kapitel, führen wichtige Konzepte der Programmierung ein und lernen, wie wir mit Python die Hardware des LiFi-Prototypen steuern können.

Das Buch ist in vier Teile gegliedert. Nach jedem Teil stellen wir eine neue Version unseres LiFi-Prototypen fertig. Die finale Version enthält dann alle notwendigen Funktionen, die zur Beantwortung der Fragestellungen erforderlich sind.

## Was benötigen wir für das LiFi-Projekt?

### Hardware

#### Komponenten

Für den LiFi-Hardware-Prototyp benötigen wir folgende Komponenten:

-   1 x [Master Brick 3.1](https://www.tinkerforge.com/en/shop/bricks/master-brick.html)
-   1 x [RGB LED Bricklet 2.0](https://www.tinkerforge.com/en/shop/rgb-led-v2-bricklet.html)
-   1 x [Color Bricklet 2.0](https://www.tinkerforge.com/en/shop/color-v2-bricklet.html)
-   1 x [OLED 128x64 Bricklet 2.0](https://www.tinkerforge.com/en/shop/oled-128x64-v2-bricklet.html)
-   4 x [Bricklet Cable 15 cm (7p-7p)](https://www.tinkerforge.com/en/shop/bricklet-cable-15cm-7p-7p.html)
-   1 x [USB-A to USB-C Cable 100 cm](https://www.tinkerforge.com/en/shop/accessories/cable/usb-a-to-usb-c-cable-100cm.html)
-   2 x [Mounting Plate 22x10](https://www.tinkerforge.com/en/shop/accessories/mounting/mounting-plate-22x10.html)
-   4 x [Mounting Kit 12 mm](https://www.tinkerforge.com/en/shop/accessories/mounting/mounting-kit-12mm.html)

Bitte überprüfe vor dem Fortfahren mit den folgenden Anweisungen, ob dein LiFi-Kit alle Komponenten in den angegebenen Mengen enthält.

![](https://winf-hsos.github.io/university-docs/static/images/lifi_hardware_overview.jpg){fig-align="center" width=100% .lightbox}

#### Aufbauanleitung

**1. Schutzfolie auf den Befestigungsplatten entfernen**



**2. Abstandshalter an beide Befestigungsplatten anbringen**

**Befestigungsplatte 1**

**Befestigungsplatte 2**

**3. Master Brick befestigen**

**4. Verbindungskabel einstecken**

**5. Befestigungsplatten miteinander verbinden**

**6. OLED-Anzeige montieren**

**7. LED und Farbsensor montieren**

**8. Peripheriegeräte mit Master Brick verbinden**

### Software

Neben der Hardware benötigen wir für die Entwicklung des LiFi-Prototyps verschiedene Software-Komponenten. Die Software ist komplett Open-Source und dadurch kostenlos nutzbar. Alle Programme sind für Windows, Mac OS und Linux verfügbar. Hier zunächst die Übersicht, bevor wir jede Software im Detail vorstellen:

-   [Brick Daemon](https://www.tinkerforge.com/en/doc/Software/Brickd.html) und [Brick Viewer](https://www.tinkerforge.com/en/doc/Software/Brickv.html)
-   [Visual Studio Code](https://code.visualstudio.com/download)
-   [Python](https://www.python.org/downloads/)
-   [Git](https://git-scm.com/downloads)

#### Brick Daemon

#### Brick Viewer

#### Visual Studio Code

#### Python

-   Virtuelle Python-Umgebungen
-   Externe Module installieren

#### Git

-   GitHub
-   Ein Repository klonen
-   Den lokalen Code aktualisieren

## Übungsaufgaben {.unnumbered}

1.  Verwendet den Brick Viewer und verbindet euch mit eurem Master Brick. Stellt sicher, dass die Verbindung funktioniert:
     a.  Öffnet den Tab für die RGB LED und erkundet die verfügbaren Funktionen.
     b.  Testet den Farbsensor, indem ihr seine Reaktionen unter verschiedenen Lichtverhältnissen beobachtet.
     c.  Ermittelt die eindeutige Identifikationsnummer (UID) für jeden eurer Sensoren im Brick Viewer.
2.  Startet das Visual Studio Code und öffnet dort ein neues Terminalfenster:
     a.  Wechselt über die Kommandozeile in ein Verzeichnis eurer Wahl und klont das GitHub-Repository mit dem Beispielcode für dieses Buch mittels des `git`-Befehls.
     b.  Erstellt eine neue virtuelle Python-Umgebung im Ordner `. env` und aktiviert diese. Installiert die für den Beispielcode benötigen Python-Module `tinkerforge` und `pyyaml` .














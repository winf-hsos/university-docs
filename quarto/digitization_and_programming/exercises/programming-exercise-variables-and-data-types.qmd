---
title: "Übungsblatt zur Programmierung: Variablen und Datentypen"
author: "Prof. Dr. Nicolas Meseth"
format: pdf
toc: false
number-sections: false
code-line-numbers: true
subtitle: "Übungsaufgaben zur Programmierung"
---
### Reflektionsfragen

1.  Warum sind Variablen in einem Programm nützlich?

2.  Wie kann man den Wert einer Variable auf der Konsole ausgeben?

3.  Was ist der Unterschied zwischen einer Variablen und einer Konstante?

4.  Wie kann man in Python eine Konstante definieren?

5.  Welche Zeichen sind in einem Variablennamen erlaubt?

6.  Was bedeutet es, dass Python *case sensitive* ist?

7.  Beschreibe die Namenskonventionen für Variablen in Python und erkläre, warum es wichtig ist, diese Konventionen zu befolgen.

8.  Warum ist es eine gute Praxis, Variablennamen auf Englisch zu schreiben?

9.  Was sind reservierte Schlüsselwörter, und warum dürfen sie nicht als Variablennamen verwendet werden?

10.  Welche primitiven Datentypen kennst du?

11.  Welche numerischen Datentypen unterscheidet Python?

12.  Warum muss man Anführungszeichen benutzen, um eine Zeichenkette zu definieren?

13.  Wie kann man in einer Zeichenkette ein Anführungszeichen verwenden, ohne einen Fehler zu verursachen?

14.  Erläutere die Funktionsweise eine Format-Strings in Python? Was passiert mit den Platzhaltern, wenn wir das "f" als Präfix weglassen?

15.  Was ist der Boolesche Datentyp, und welche Werte kann er annehmen?

16.  Warum werden `True` und `False` in Python nicht in Anführungszeichen geschrieben?

17.  Was passiert mit dem alten Wert einer Variable, wenn ihr ein neuer Wert zugewiesen wird?

18.  Beschreibe mit eigenen Worten, was unter einer *Variable* zu verstehen ist! Was ist eine Variable aus technischer Sicht?

### Programmieraufgaben

Erstelle für jede der folgenden Aufgaben ein separates Python-Programm in einer eigenen Datei mit der Endung `.py`!

1.  Schreibe ein kleines Python-Programm, das eine Variable für die Fläche eines Kreises berechnet und speichert. Nutze für den Wert von `π` die Konstante aus dem `math` Modul.

2.  Definiere eine Variable mit einer Zeichenkette, die einen Backslash enthält, und gib sie auf der Konsole aus. Was beobachtest du?

3.  Addiere zwei Zeichenketten und lass dir das Ergebnis anzeigen! Multipliziere anschließend eine Zeichenkette mit einer ganzen Zahl!

4.  Frage den Benutzer nach seinem Vor- und Nachnamen und speichere das Ergebnis in einer Variable`name`. Teile diese Variable anschließend in zwei Variablen auf: `first_name`für den Vornamen und `last_name` für den Nachnamen. Nutze die `find()`-Funktion, um das Leerzeichen zwischen Vor- und Nachnamen zu finden. Speichere die gefundene Position auf einer weiteren Variable. Verwende dann die Notation mit eckigen Klammern, um die beiden Namensteile zu extrahieren und in den entsprechenden Variablen zu speichern.

5.  Schreibe ein Programm, in dem du zwei boolesche Werte addierst und subtrahierst. Betrachte und interpretiere das Ergebnis. Multipliziere anschließend einen booleschen Wert mit einem numerischen Wert. Was passiert?

6.  Erstelle eine beliebige Variable und gib die Speicheradresse der Variable auf der Konsole aus!



